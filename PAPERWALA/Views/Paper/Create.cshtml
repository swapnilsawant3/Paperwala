@model PAPERWALA.Models.PaperDTO

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdminMain.cshtml";
}

<script src="~/Scripts/jquery-1.8.2.js"></script>
<script src="~/Scripts/jquery-1.8.2.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {

        $("#StateId").change(function () {

            $("#CityId").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCity")',
                dataType: 'json',
                data: { StateId: $("#StateId").val() },
                success: function (citydata) {

                    $("#CityId").append('<option value="' + "0" + '">' + "Select" + '</option>');

                    $.each(citydata, function (i, city) {
                        $("#CityId").append('<option value="' + city.CityId + '">' + city.CityName + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve City.' + ex);
                }
            });
            return false;
        })


    });

</script>
<script type="text/javascript">
    $(document).ready(function () { rebindCity(); });
</script>

<script type="text/javascript">

    function rebindPaper() {

        if ('@ViewData["SelectedCity"]' != '') {

            $("#StateId").val('@Model.StateId');

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCity")',
                dataType: 'json',
                data: {
                    StateId: $("#StateId").val()
                },
                success: function (citydata) {

                    $("#CityId").append('<option value="' + "0" + '">' + "Select" + '</option>');

                    $.each(citydata, function (i, city) {
                        $("#CityId").append('<option value="' + city.CityId + '">' + city.CityName + '</option>');
                    });

                    if ('@ViewData["SelectedCity"]' != 0) {
                        $("#CityId").val('@ViewData["SelectedCity"]');
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve City.' + ex);
                }
            });
        }
    }
</script>

<div class="page-header">
    <div class="row align-items-end">
        <div class="col-lg-8">
            <div class="page-header-title">
                <i class="ik ik-edit bg-blue"></i>
                <div class="d-inline">
                    <h5>Create Paper Master</h5>
                    <span>You can create Paper for Application to handle Utility.</span>
                </div>
            </div>
        </div>

    </div>
</div>
<div class="col-lg-8">
    @if (TempData["MessageRegistration"] != null)
            {
        <div class="alert  alert-success alert-dismissible" role="alert">
            @*<span class="badge badge-pill badge-success">Success</span>*@@TempData["MessageRegistration"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header"><h3>Paper Master</h3></div>
            <div class="card-body">
                <div class="forms-sample">


                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.StateName)
                                    @Html.DropDownListFor(model => model.StateId, new SelectList(Model.ListState, "StateId", "StateName"), new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CityName)
                                    @Html.DropDownListFor(model => model.CityId, new SelectList(Model.ListCity, "CityId", "CityName"), new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PaperName)
                                    @Html.TextBoxFor(model => model.PaperName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PaperName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Language)
                                    @Html.TextBoxFor(model => model.Language, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                            
                            <button class="btn btn-primary" type="submit"> <i class="ik ik-clipboard"></i> Submit Info</button>
                            @Html.ActionLink("All Papers", "Details", "Paper", null, new { @class = "btn btn-success" })
                            }

                        </div>



            </div>
        </div>
    </div>
    </div>
